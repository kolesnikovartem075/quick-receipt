import json
from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton

from app.client.APIClient import create_user, create_user_contact, fetch_user, fetch_user_contact
from app.handler.order import show_user_details

webapp_router = Router()

WEBAPP_URL = "https://localhost:8000"


def get_webapp_keyboard():
    web_app = WebAppInfo(url=WEBAPP_URL)

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìù –ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å", web_app=web_app)]
    ])

    return keyboard


# @webapp_router.message(CommandStart())
async def start_webapp(message: Message, state: FSMContext):
    user = await fetch_user(message.from_user.id)

    if not user:
        await create_user({"externalUserId": message.from_user.id})

    await message.reply(f'–ü—Ä–∏–≤—ñ—Ç {message.from_user.first_name},\n'
                        f'–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç—Ä–µ–±–∞ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å.\n'
                        f'–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Ñ–æ—Ä–º—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó:',
                        reply_markup=get_webapp_keyboard())


@webapp_router.message(F.web_app_data)
async def web_app_data(message: Message, state: FSMContext):
    data = json.loads(message.web_app_data.data)

    if data.get('action') == 'register':
        user_data = data.get('data', {})
        telegram_id = message.from_user.id

        user = await fetch_user(telegram_id)
        if not user:
            user = await create_user({"externalUserId": telegram_id})

        response = await create_user_contact(user.id, user_data)

        if response and response.status_code == 201:

            contact_data = user_data.get('contactCreateEditDto', {})

            await message.answer(
                f"‚úÖ *–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!*\n\n"
                f"üë§ –Ü–º º—è: {contact_data.get('firstName', '-')}\n"
                f"üë§ –ü—Ä–∏–∑–≤–∏—â–µ: {contact_data.get('lastName', '-')}\n"
                f"üìç –ú—ñ—Å—Ç–æ: {contact_data.get('city', '-')}\n"
                f"üè¢ –í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏: {contact_data.get('postOffice', '-')}\n"
                f"üìû –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {contact_data.get('phoneNumber', '-')}\n"
                "–î—è–∫—É—î–º–æ –∑–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é!",
                parse_mode="Markdown"
            )

            user_contact = await fetch_user_contact(user.id)
            if user_contact:
                await show_user_details(message, user_contact, state)
        else:
            await message.answer("‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∫–æ–Ω—Ç–∞–∫—Ç—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")

    else:

        await message.answer(f"–û—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω—ñ: {data}")
